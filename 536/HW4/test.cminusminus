struct Point {
    int x;
    int y;
};
int f(int x, bool b) { }
void g() {
    int a;
    bool b;
    struct Point p;
    p.x = a;
    b = a == 3;
    f(a + p.y*2, b);
    g();
}

int x;
bool y;

int fn1() {}

bool fn2(int x, bool y) {}

struct stru {
	int x;
	bool y;
};

void allStmts() {
    int x;
	bool y;
    
    int a;
    int b;
    int c;
    int d;
    int e;
    bool f;
    bool g;
    bool h;
    bool i;
    bool j;
    bool k;
    bool l;
    bool m;
    bool n;
    bool o;
    bool p;
    bool q;
    int r;
    int s;
    int t;
    bool u;
	
    if (x == -1) { x = 4+3*5-y; while (y) { y = y*2+x; } } else { x = 0; }
    a = 1;
    b++;
    c--;
    cin >> d;
    cout << e;
    if (f) {}
    if (g) {
    	int g;
    }
    if (h) {
    	return h;
    }
    if (i) {
    	bool i;
    	return i;
    }
    if (j) {} else {}
    if (k) {
    	bool k;
    } else {
    	return k;
    }
    if (l) {
    	return l;
    } else {
    	bool l;
    }
    if (m) {
    	int m;
    	return m;
    } else {
    	int m;
    	return m;
    }
    while (n) {}
    while (o) {
    	bool o;
    }
    while (p) {
    	return p;
    }
    while (q) {
    	int q;
    	return q;
    }
    repeat (r) {}
    repeat (s) {
    	bool s;
    }
    repeat (t) {
    	return t;
    }
    return u;
    return;
    fn1();
    fn2(a,1,"s",1+2);
}

void allExps() {
	int a;
	int b;
	int c;
	int d;
	int e;
	bool f;
	bool g;
	bool h;
	int i;
	int j;
	int k;
	int l;
	int m;
	int n;
	int o;
	struct stru p;
	struct stru q;
	bool s;
	
	return a = 1;
	return b + b;
	return c - c;
	return d * d;
	return e / e;
	return !f;
	return g && g;
	return h || h;
	return i == i;
	return j != j;
	return k < k;
	return l > l;
	return m <= m;
	return n >= n;
	return -o;
	
	
	return p;
	return q.x;
	return q.y;
	return 0;
	return 100000;
	return "";
	return "\n\\\"";
	return "Hello World!";
	return true;
	return false;
	return ((((((((((1 + a))))))))));
	return r();
	return fn2(s,s,s,1,"str",1+2+3+4+5,true);
}
